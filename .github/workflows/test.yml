on:
  push:

jobs:
  build:
    services:
      mongodb:
        image: mongo:8.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[ci-skip]')"
    steps:
      - name: Install MongoDB Shell (mongosh)
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Wait for MongoDB to Start
        run: |
          for i in {1..10}; do
            if mongosh --host localhost --port 27017 --eval "db.runCommand({ping: 1})"; then
              echo "MongoDB is ready!";
              exit 0;
            fi;
            sleep 3;
          done;
          echo "MongoDB did not become ready in time!" && exit 1;

      - name: Create Test Database
        run: |
          mongosh --host localhost --port 27017 <<EOF
          use testdb
          db.test.insertOne({ initialized: true });
          EOF
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: 'gradle'
      - uses: gradle/actions/setup-gradle@v4
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build
        run: ./gradlew test --no-daemon --stacktrace
      - name: Rebuild on Failure
        if: ${{ failure() }}
        run: |
          ./gradlew clean cleanCache
          ./gradlew test --no-daemon --stacktrace 
